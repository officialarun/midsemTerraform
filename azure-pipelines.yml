trigger:
- master

pool:
  name: Agent_Arun   # your self-hosted agent pool name

variables:
  vm_user: 'azureuser'
  vm_password: 'Password123!'   
  terraformVersion: '1.8.0'

steps:

# Step 1: Checkout your repository
- checkout: self

- script: |
    echo "Cleaning working directory..."
    rm -rf $(System.DefaultWorkingDirectory)/*
  displayName: 'Clean Working Directory'


# Step 2: Install Terraform
- task: TerraformInstaller@1
  inputs:
    terraformVersion: $(terraformVersion)

- task: AzureCLI@2
  displayName: 'Run Terraform'
  inputs:
    azureSubscription: 'service-arun-app'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)

      # Export SP credentials for Terraform
      export ARM_CLIENT_ID=$servicePrincipalId
      export ARM_CLIENT_SECRET=$servicePrincipalKey
      export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
      export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)

      echo "Initializing Terraform and downloading providers..."
      terraform init -upgrade -reconfigure -input=false

      echo "Validating Terraform configuration..."
      terraform validate

      echo "Running Terraform plan..."
      terraform plan -var-file="environments/dev.tfvars" -out=tfplan -input=false

      echo "Applying Terraform changes..."
      terraform apply -auto-approve -input=false "tfplan"

      echo "Fetching VM Public IP..."
      terraform output -raw vm_public_ip > vm_ip.txt
      cat vm_ip.txt


- task: AzureCLI@2
  displayName: 'Copy nginx-app files to VM'
  inputs:
    azureSubscription: 'service-arun-app'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)
      VM_IP=$(cat vm_ip.txt)

      echo "Installing sshpass..."
      sudo apt-get update -y
      sudo apt-get install -y sshpass

      echo "Copying nginx-app directory to VM ($VM_IP)..."
      sshpass -p "$(vm_password)" scp -o StrictHostKeyChecking=no -r modules/nginx-app $(vm_user)@$VM_IP:/home/$(vm_user)/

- task: AzureCLI@2
  displayName: 'Run setup_nginx.sh on VM'
  inputs:
    azureSubscription: 'service-arun-app'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)
      VM_IP=$(cat vm_ip.txt)

      echo "Connecting to VM ($VM_IP) and running setup_nginx.sh..."
      sshpass -p "$(vm_password)" ssh -o StrictHostKeyChecking=no $(vm_user)@$VM_IP "
        cd ~/nginx-app &&
        chmod +x setup_nginx.sh &&
        ./setup_nginx.sh
      "

