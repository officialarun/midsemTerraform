trigger:
- master

pool:
  name: Agent_Arun   # your self-hosted agent pool name

variables:
  vm_user: 'azureuser'
  vm_password: 'Password123!'   
  terraformVersion: '1.8.0'

steps:

# Step 1: Checkout your repository
- checkout: self

# Step 2: Install Terraform
- task: AzureCLI@2
  displayName: 'Terraform Setup and Apply'
  inputs:
    azureSubscription: 'service-arun-app'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)

      # Install Terraform (inline)
      echo "Installing Terraform..."
      wget https://releases.hashicorp.com/terraform/1.8.0/terraform_1.8.0_linux_amd64.zip
      unzip terraform_1.8.0_linux_amd64.zip
      sudo mv terraform /usr/local/bin/
      terraform version

      # Clean any previous terraform state in this workspace
      rm -rf .terraform tfplan vm_ip.txt

      # Export SP credentials
      export ARM_CLIENT_ID=$servicePrincipalId
      export ARM_CLIENT_SECRET=$servicePrincipalKey
      export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
      export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)

      # Terraform workflow
      terraform init -upgrade -reconfigure -input=false
      terraform validate
      terraform plan -var-file="environments/dev.tfvars" -out=tfplan -input=false
      terraform apply -auto-approve -input=false tfplan

      # Save VM IP
      VM_IP=$(terraform output -raw vm_public_ip)
      echo $VM_IP > vm_ip.txt

      # Copy nginx files and run setup
      sudo apt-get update -y
      sudo apt-get install -y sshpass

      sshpass -p "$(vm_password)" scp -o StrictHostKeyChecking=no -r modules/nginx-app $(vm_user)@$VM_IP:/home/$(vm_user)/
      sshpass -p "$(vm_password)" ssh -o StrictHostKeyChecking=no $(vm_user)@$VM_IP "
        cd ~/nginx-app &&
        chmod +x setup_nginx.sh &&
        ./setup_nginx.sh
      "


# - task: AzureCLI@2
#   displayName: 'Copy nginx-app files to VM'
#   inputs:
#     azureSubscription: 'service-arun-app'
#     scriptType: bash
#     scriptLocation: inlineScript
#     inlineScript: |
#       cd $(System.DefaultWorkingDirectory)
#       VM_IP=$(cat vm_ip.txt)

#       echo "Installing sshpass..."
#       sudo apt-get update -y
#       sudo apt-get install -y sshpass

#       echo "Copying nginx-app directory to VM ($VM_IP)..."
#       sshpass -p "$(vm_password)" scp -o StrictHostKeyChecking=no -r modules/nginx-app $(vm_user)@$VM_IP:/home/$(vm_user)/

# - task: AzureCLI@2
#   displayName: 'Run setup_nginx.sh on VM'
#   inputs:
#     azureSubscription: 'service-arun-app'
#     scriptType: bash
#     scriptLocation: inlineScript
#     inlineScript: |
#       cd $(System.DefaultWorkingDirectory)
#       VM_IP=$(cat vm_ip.txt)

#       echo "Connecting to VM ($VM_IP) and running setup_nginx.sh..."
#       sshpass -p "$(vm_password)" ssh -o StrictHostKeyChecking=no $(vm_user)@$VM_IP "
#         cd ~/nginx-app &&
#         chmod +x setup_nginx.sh &&
#         ./setup_nginx.sh
#       "

