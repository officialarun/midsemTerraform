trigger:
- feature

pool:
  name: Agent_Arun   # Linux self-hosted agent

variables:
  vm_user: 'arun'
  vm_password: 'Password123!'   # Store as secret in pipeline
  terraformVersion: '1.8.0'

steps:

# Step 1: Checkout repository
- checkout: self

# Step 2: Install Terraform
- task: TerraformInstaller@1
  inputs:
    terraformVersion: $(terraformVersion)

- task: AzureCLI@2
  displayName: 'Terraform Init / Plan / Apply'
  inputs:
    azureSubscription: 'service-arun-app'
    addSpnToEnvironment: true
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "Terraform using SPN credentials from service connection"

      cd $(System.DefaultWorkingDirectory)
      rm -rf .terraform tfplan vm_ip.txt || true

      echo "Setting Terraform Azure environment variables..."
      export ARM_CLIENT_ID=$servicePrincipalId
      export ARM_CLIENT_SECRET=$servicePrincipalKey
      export ARM_TENANT_ID=$tenantId
      export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)

      echo "Checking SPN authentication..."
      az account show

      echo "Initializing Terraform backend with SPN credentials..."
      terraform init -reconfigure -input=false

      terraform validate
      terraform plan -out=tfplan -input=false
      terraform apply -auto-approve tfplan

      echo "Fetching VM Public IP..."
      terraform output -raw vm_public_ip > vm_ip.txt
      cat vm_ip.txt


# Step 4: Copy nginx-app files to VM
- task: AzureCLI@2
  displayName: 'Copy nginx-app files to VM'
  inputs:
    azureSubscription: 'service-arun-app'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)
      VM_IP=$(cat vm_ip.txt)

      if [ -z "$VM_IP" ]; then
        echo "Error: VM IP not found. Terraform apply likely failed."
        exit 1
      fi

      echo "Checking if sshpass is installed..."
      if ! command -v sshpass &> /dev/null; then
        sudo apt-get update -y
        sudo apt-get install -y sshpass
      fi

      export VM_PASS=$(vm_password)
      echo "Copying nginx-app to VM $VM_IP..."
      sshpass -p $VM_PASS scp -o StrictHostKeyChecking=no -r modules/nginx-app $(vm_user)@$VM_IP:/home/$(vm_user)/

# Step 5: Run setup_nginx.sh on VM
- task: AzureCLI@2
  displayName: 'Run setup_nginx.sh on VM'
  inputs:
    azureSubscription: 'service-arun-app'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)
      VM_IP=$(cat vm_ip.txt)

      if [ -z "$VM_IP" ]; then
        echo "Error: VM IP not found. Terraform apply likely failed."
        exit 1
      fi

      export VM_PASS=$(vm_password)
      echo "Running setup_nginx.sh on VM $VM_IP..."
      sshpass -p $VM_PASS ssh -o StrictHostKeyChecking=no $(vm_user)@$VM_IP "
        cd ~/nginx-app &&
        chmod +x setup_nginx.sh &&
        ./setup_nginx.sh
      "
