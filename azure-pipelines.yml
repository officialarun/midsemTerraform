trigger:
- master

pool:
  name: Agent_Arun   # your self-hosted agent pool name

variables:
  vm_user: 'arun'
  vm_password: 'Pandey@2024Azure!'    
  terraformVersion: '1.8.0'

steps:

# Step 1: Checkout your repository
- checkout: self

# Step 2: Install Terraform
- task: TerraformInstaller@1
  inputs:
    terraformVersion: $(terraformVersion)

# Step 3: Run Terraform to create VM
- task: AzureCLI@2
  displayName: 'Run Terraform'
  inputs:
    azureSubscription: 'service-arun-app'  
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)

      # Optional: clean previous Terraform artifacts
      rm -rf .terraform tfplan vm_ip.txt || true

      echo "Initializing Terraform..."
      terraform init -reconfigure -upgrade -input=false

      echo "Validating Terraform configuration..."
      terraform validate

      echo "Running Terraform plan..."
      terraform plan -out=tfplan -input=false

      echo "Applying Terraform changes..."
      terraform apply -auto-approve tfplan

      echo "Fetching VM Public IP..."
      terraform output -raw vm_public_ip > vm_ip.txt
      cat vm_ip.txt

# Step 4: Copy nginx-app to VM
- task: AzureCLI@2
  displayName: 'Copy nginx-app files to VM'
  inputs:
    azureSubscription: 'service-arun-app'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)
      VM_IP=$(cat vm_ip.txt)

      echo "Installing sshpass if needed..."
      if ! command -v sshpass &> /dev/null; then
        sudo apt-get update -y
        sudo apt-get install -y sshpass
      fi

      echo "Copying nginx-app directory to VM ($VM_IP)..."
      sshpass -p "$(vm_password)" scp -o StrictHostKeyChecking=no -r modules/nginx-app $(vm_user)@$VM_IP:/home/$(vm_user)/

# Step 5: Run setup_nginx.sh on the VM
- task: AzureCLI@2
  displayName: 'Run setup_nginx.sh on VM'
  inputs:
    azureSubscription: 'service-arun-app'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)
      VM_IP=$(cat vm_ip.txt)

      if [ -z "$VM_IP" ]; then
        echo "Error: VM IP not found. Terraform apply likely failed."
        exit 1
      fi

      echo "Connecting to VM ($VM_IP) and running setup_nginx.sh..."
      sshpass -p "$(vm_password)" ssh -o StrictHostKeyChecking=no $(vm_user)@$VM_IP "
        cd ~/nginx-app &&
        chmod +x setup_nginx.sh &&
        ./setup_nginx.sh
      "
